// room script file

bool wasReminded = false;

AudioChannel * bg_music_channel;

bool completeCluesLastPass = false;

Overlay *msgOverlay;
DynamicSprite *msgSprite;

int blindTransparency = 100;

function Credits()
{
  //bg_music_channel = aChoices.Play();
  
  
  Display("Thank you for playing!");
  Display("This was MAGS MAY 2019 submission by...");
  Display("Art - GaeilgeGames\nWriting - Durq\nProgramming - Artium");
  QuitGame(0);
}

function FadeBgMusic() {
  if(IsTimerExpired(2))
  {
    bg_music_channel.Volume -= bg_music_channel.Volume / 10;
    SetTimer(2, (2*GetGameSpeed())/2);
  }
}


function FadeBlinds() {
  if(IsTimerExpired(3))
  {
    if (blindTransparency > 60) {
      blindTransparency = blindTransparency - 2;
      SetTimer(3, GetGameSpeed()/10);
    }
  }
  
  gBlack.Transparency = blindTransparency;
}

function PlayEpilogueSequence()
{
  player.Say("Good thing I brought my knife. This piece of shit thinks he can run around on me. No way.");
  player.Say("I’m going to crack his mirrors and slash his tires.");
  
  SetTimer(2, (3*GetGameSpeed())/2); // Start fading BG music...
  
  aMirror.Play();
  aTires.Play();
  Wait(GetGameSpeed() * 4);
  aMirror.Play();
  Wait(GetGameSpeed() * 4);
  
  player.Say("Mirrors are destroyed, and that’s one tire down.");
  aMessage.Play();
  player.Say("The bastard deserves this.");
  Wait(GetGameSpeed() * 1 + GetGameSpeed() / 2);
  
  player.Say("He is texting me.");
  
  bg_music_channel.Stop(); // Drop what is left of BG music
  
  gHand.Visible = true;
  
  Wait(GetGameSpeed() * 10);
  
  //cGirl.SpeechView = GIRLSMILETALK; // Not good - commenting out
  
  gHand.Visible = false;
  player.Say("Oh, shit.");
  
  gBlack.Visible = true;
  SetTimer(3, GetGameSpeed()/10);  // Start fading...

  Wait(GetGameSpeed() * 3); // Calculated fading speed and target transparency to fit in 3 seconds
  
  Credits();
}


function on_key_press(eKeyCode keycode) 
{
  // Used for debug and testing
  if (keycode == eKey9) PlayEpilogueSequence();
}

function hTrashcan_Interact()
{
  if (player.HasInventory(iReciept)) {
    player.Say("I've already searched the trash can.");

  } else {
    player.Say("Ugh. It stinks, but there's a receipt on top.");
    player.Say("He bought a bunch of food, and what's this? Massage oil? I've never received any massages from him.");
    player.Say("Who is he rubbing?!");
    player.AddInventory(iReciept);
    Reciept.Enable(); 
    Clues.Found(eClueReciept);
  }
}

function hTrashcan_Look()
{
  if (player.HasInventory(iReciept)) {
    player.Say("I've already searched the trash can.");

  } else {
    player.Say("That's his garbage can. Maybe there's something incriminating in there.");
  }
}

function hMainWindow_Interact()
{
  player.Say("I can't open the window.");
}

function hMainWindow_Look()
{
  if (Reciept.HasSelection() == true) { // Some items selected in the list
    
    if (Reciept.ItemsSelectedForClue(eClueChampagne) == false) {
      player.Say("That doesn’t make sense.");
    } else { // The combination is correct
      if (Clues.IsAlreadyFound(eClueChampagne)) { // Found clue in the past
        player.Say("I already know that this is a champagne bottle in the window.");
      } else {
        player.Say("Is that a champagne bottle?");
        player.Say("That son of a bitch must be planning to wine and dine some young tart.");
        player.Say(" That bastard is going down!");
        Clues.Found(eClueChampagne);
      }
    }    
  } else { // Nothing selected in the item list
    
    if (Clues.IsAlreadyFound(eClueChampagne)) { // Found clue
      player.Say("That is a champagne bottle in the window.");
    } else { // Not found clue
      player.Say("I can’t make out what that is.");
    }
  }
}

function hKitchenWindow_Interact()
{
  player.Say("I can't open the window.");
  if (Clues.IsAlreadyFound(eClueCake)) {
     player.Say("I already know what's cooking.");
  } else {
    player.Say("There's a smell coming out of the kitchen, but he doesn't cook.");
    player.Say("He must have some tramp in there cooking for him.");
  }
}

function hKitchenWindow_Look()
{
  if (Reciept.HasSelection() == true) { // Some items selected in the list

    if (Reciept.PartialItemsSelectedForClue(eClueCake) == false) {
      player.Say("That doesn’t make sense.");
    } else if (Reciept.ItemsSelectedForClue(eClueCake) == false) {
      player.Say("Something is missing here...");
    } else { // The combination is correct
      if (Clues.IsAlreadyFound(eClueCake)) { // Found clue in the past
        player.Say("I already know what's cooking.");
      } else {
        player.Say("Some bitch must be in there baking a cake for him!");
        Clues.Found(eClueCake);
      }
    }    
  } else { // Nothing selected in the item list
    
    if (Clues.IsAlreadyFound(eClueCake)) { // Found clue
      player.Say("I already know what's cooking.");
    } else { // Not found clue
      player.Say("That's the kitchen window. The blinds are down.");
    }
  }
}

function hDoor_Interact()
{

  if(Clues.IsComplete()) {
    PlayEpilogueSequence();
  } else {
    player.Say("I am not ready to confront him yet.");
    player.Say("I want to figure out what is going on first.");
  }

}

function hDoor_Look()
{
  if(Clues.IsComplete()) {
    player.Say("There is no choise left!");
    return;
  }
  
  int oldVolume = bg_music_channel.Volume;
  bg_music_channel.Volume = 21;
  
  if (Reciept.HasSelection() == true) { // Some items selected in the list
    
    if (Reciept.ItemsSelectedForClue(eClueMusic) == false) {
      player.Say("That doesn’t make sense.");
    } else { // The combination is correct
      if (Clues.IsAlreadyFound(eClueMusic)) { // Found clue in the past
        player.Say("I already know that he is playing the Usher CD.");
      } else {
        player.Say("He’s playing the Usher CD!?");
        player.Say("He must be getting ready to sex up another woman.");
        player.Say("This is unbelievable!");
        Clues.Found(eClueMusic);
      }
    }    
  } else { // Nothing selected in the item list
    
    if (Clues.IsAlreadyFound(eClueMusic)) { // Found clue
      player.Say("He’s playing the Usher CD.");
    } else { // Not found clue
        player.Say("There’s some music playing, but I can’t quite tell what song it is.");
    }
  }
  
  bg_music_channel.Volume = oldVolume;
}

function room_FirstLoad()
{
    
  SetTimer(1, 5 * 60 * GetGameSpeed());
  
  bg_music_channel = aUsher.Play(eAudioPriorityNormal, eRepeat);
  bg_music_channel.Volume  = 10;
  
  Wait(GetGameSpeed() * 4 + GetGameSpeed() / 2);
  
  player.Say("My boyfriend has been really short with me all day.");
  
  player.Say("Something's up. I can't shake the feeling that he's cheating on me");

  Wait(GetGameSpeed() * 3);
  player.Say("And now he's not answering my texts.");
  //Wait(GetGameSpeed() * 1);
  player.Say("This might be a little nuts, but if he's cheating, I'm going to catch him in the act.");
  player.Say("I NEED to know!");
}

function repeatedly_execute_always() {
  
  FadeBgMusic(); // Will check if timer expired inside the function
  
  FadeBlinds();
  
  /**
   *  Leave only door interactable when all the clues were found.
   *  Also change music.
   */
  if(Clues.IsComplete()) {
    Reciept.Disable();
    
    hMainWindow.Enabled = false;
    hKitchenWindow.Enabled = false;
    hTrashcan.Enabled = false;
    
    if (completeCluesLastPass == false) {
      aUsher.Stop();
      bg_music_channel = aChoices.Play (eAudioPriorityHigh, eRepeat);
    }
  }  
  
  completeCluesLastPass = Clues.IsComplete();
  
  /** 
   * Display gameplay reminder after some duration
   * Little help for stuck players
   */
   if (IsTimerExpired(1) && Clues.CountFound() == 1 && wasReminded == false) {
      Display("Gameplay reminder: \nLeft Mouse - Look\nRight Mouse - Interact");
      wasReminded = true;
   }
}



